/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/DOMGlobalManipulations.js":
/*!***************************************!*\
  !*** ./src/DOMGlobalManipulations.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"container\": () => (/* binding */ container),\n/* harmony export */   \"quickListProjects\": () => (/* binding */ quickListProjects),\n/* harmony export */   \"postitProjects\": () => (/* binding */ postitProjects),\n/* harmony export */   \"taskContainer\": () => (/* binding */ taskContainer),\n/* harmony export */   \"addProject\": () => (/* binding */ addProject),\n/* harmony export */   \"addToDo\": () => (/* binding */ addToDo),\n/* harmony export */   \"clearInput\": () => (/* binding */ clearInput),\n/* harmony export */   \"closeOverlay\": () => (/* binding */ closeOverlay),\n/* harmony export */   \"isDone\": () => (/* binding */ isDone),\n/* harmony export */   \"get\": () => (/* binding */ get),\n/* harmony export */   \"set\": () => (/* binding */ set),\n/* harmony export */   \"showForm\": () => (/* binding */ showForm),\n/* harmony export */   \"createTask\": () => (/* binding */ createTask)\n/* harmony export */ });\nconst container = document.getElementById('content-container');\nconst quickListProjects = document.getElementById('quick-projects');\nconst postitProjects = document.getElementById('postit-projects');\nconst taskContainer = document.getElementById('task-container')\nconst addProject = document.getElementById('add-project');\nconst addToDo = document.getElementById('add-todo');\n\nconst _getter = () => {\n    const name = () => {\n        const value = document.getElementById('name').value;\n        const node = document.getElementById('name');\n        return { value, node }\n    }\n    const type = () => {\n        let value;\n        let node;\n        if (document.getElementById('quick').checked) {\n            value = document.getElementById('quick').value;\n            node = document.getElementById('quick');\n        } else if (document.getElementById('regular').checked) {\n            value = document.getElementById('regular').value;\n            node = document.getElementById('regular');\n    \n        }\n        return { value, node }\n    }\n    const item = () => {\n        const value = document.getElementById('item').value;\n        const node = document.getElementById('item');\n        return { value, node }\n    }\n    const dueDate = () => {\n        const value = document.getElementById('dueDate').value;\n        const node = document.getElementById('dueDate');\n        return { value, node }\n    }\n    const description = () => {\n        const value = document.getElementById('description').value;\n        const node = document.getElementById('description');\n        return { value, node }\n    }\n    const priority = () => {\n        const value = document.getElementById('priority').value;\n        const node = document.getElementById('priority');\n        return { value, node }\n    }\n    const project = () => {\n        const value = document.getElementsByClassName('selected')[0].children[1].textContent;\n        const node = document.getElementsByClassName('selected')[0];\n        return { value, node }\n    }\n    const allTasks = () => {\n        const tasks = document.getElementsByClassName('task');\n        return tasks\n    }\n    const list = () => {\n        const node = document.getElementById('quick-task-list');\n        return node\n    }\n    const submitButton = () => document.getElementById('submit');\n    const addItemButton = () => document.getElementById('add-item');\n\n    return { name, type, item, dueDate, description, priority, project, list, allTasks, submitButton, addItemButton }\n}\n\nconst _setter = () => {\n    const type = (value) => {\n        const newType = document.getElementById(value);\n        newType.checked = true\n    }\n\n    const name = (value) => {\n        get.name().node.value = value\n    }\n\n    const description = (value) => {\n        get.description().node.value = value\n    }\n\n    const dueDate = (value) => {\n        get.dueDate().node.value = value\n    }\n\n    const priority = (value) => {\n        get.priority().node.value = value\n    }\n\n    const submitButton = (value, id, taskIndex) => {\n        get.submitButton().setAttribute('data-task-index', taskIndex)\n        get.submitButton().textContent = value;\n        get.submitButton().id = id;\n    }\n\n    return { type, name, description, dueDate, priority, submitButton }\n}\n\nconst _taskFactory = () => {\n    const _container = (type, task) => {\n        const card = document.createElement('div');\n        card.classList.add('task');\n        if (type === 'regular'){\n            card.classList.add('post-it');\n        }\n        switch (task.priority) {\n            case 'low':\n                card.classList.add('priority-low')\n                break;\n            case 'normal':\n                card.classList.add('priority-normal')\n                break;\n            case 'high':\n                card.classList.add('priority-high')\n                break;\n                    \n            default:\n                card.classList.add('priority-normal')\n                break;\n        }\n        card.setAttribute('data-index', task.id);\n        card.setAttribute('data-project', task.project);\n\n        return card\n    }\n\n    const _title = (type, task) => {\n        const title = document.createElement('h4');\n        title.classList.add('centered');\n        type === 'quick' ? title.textContent = task.dueDate : title.textContent = task.name;\n        return title\n    }\n    \n    const _list = (task) => {\n        const listContainer = document.createElement('div');\n        listContainer.id = 'list-container'\n        task.list.forEach(item => {\n            const line = document.createElement('div');\n            const ballot = document.createElement('div');\n            ballot.classList.add('ballot');\n            const listItem = document.createElement('p');\n            listItem.textContent = item;\n            line.appendChild(ballot)\n            line.appendChild(listItem)\n            listContainer.appendChild(line)\n        });\n        return listContainer\n    }\n\n    const _date = (task) => {\n        const dueDate = document.createElement('p');\n        dueDate.classList.add('underline');\n        dueDate.textContent = task.dueDate;\n        return dueDate\n    }\n\n    const _description = (task) => {\n        const desc = document.createElement('p');\n        if (task.description.length > 30) {\n            desc.textContent = task.description.slice(0, 30) + ' ...';\n        } else {\n            desc.textContent = task.description;\n        }\n        return desc\n    }\n\n    const _button = (type) => {\n        const button = document.createElement('button');\n        button.classList.add('task-action');\n        button.classList.add(type);\n        switch (type) {\n            case 'edit':\n                button.textContent = 'ğŸ–‰'\n                break;\n            case 'delete':\n                button.textContent = 'ğŸ—‘';\n                break;\n                \n            case 'status':\n                button.textContent = 'âˆš';\n                break;\n                    \n            default:\n                \n                break;\n        }\n        return button\n    }\n    \n    const taskConstructor = (type, task) => {\n        const container = _container(type, task);\n        const title = _title(type, task);\n        container.appendChild(title);\n        \n        switch (type) {\n            case 'quick':\n                const list = _list(task);\n                container.appendChild(list);\n                break;\n            case 'regular':\n                const date = _date(task);\n                container.appendChild(date);\n                const description = _description(task);\n                container.appendChild(description);\n                break;\n        }\n\n        const button = _button('edit');\n        const button2 = _button('delete');\n        const button3 = _button('status');\n        container.appendChild(button);\n        container.appendChild(button2);\n        container.appendChild(button3);\n        \n        return container\n    }\n    \n    return { taskConstructor }\n}\n\nconst _formFactory = () => {\n    const _container = () => {\n        const cont = document.createElement('div');\n        cont.classList.add('inner-form-container');\n        return cont\n    }\n    const _label = (value, content) => {\n        const label = document.createElement('label');\n        label.setAttribute('for', value);\n        label.textContent = content;\n        return label\n    }\n    const _radioInput = (value) => {\n        const input = document.createElement('input');\n        input.type = 'radio';\n        input.name = 'type';\n        input.value = value;\n        input.id = value;\n        return input\n    }\n    const _textInput = (value) => {\n        const input = document.createElement('input');\n        input.type = 'text';\n        input.id = value;\n        return input\n    }\n    const _dateInput = (value) => {\n        const input = document.createElement('input');\n        input.type = 'date';\n        input.id = value;\n        return input\n    }\n    const _textArea = (value) => {\n        const input = document.createElement('textarea');\n        input.id = value;\n        input.rows = 5;\n        return input\n    }\n    const _select = (value, options) => {\n        const input = document.createElement('select');\n        input.id = value;\n        options.forEach(option => {\n            const opt = document.createElement('option');\n            opt.value = option;\n            opt.textContent = option;\n            option === 'normal' ? opt.selected = true : opt.selected = false;\n            input.appendChild(opt);\n        });\n        return input\n    }\n    const _button = (value, content) => {\n        const submit = document.createElement('button');\n        submit.id = value;\n        submit.textContent = content;\n        return submit\n    }\n    \n    const createOverlay = (formType, children) => {\n        const overlay = document.createElement('div');\n        overlay.id = 'form-overlay';\n        const formContainer = document.createElement('div');\n        formContainer.classList.add('form');\n        formContainer.classList.add(formType);\n        children.forEach(div => {\n            formContainer.appendChild(div)\n        });\n        overlay.appendChild(formContainer)\n        \n        return overlay\n    }\n\n    const containerConstructor = (type, name, content, options) => {\n        const container = _container();\n        let label;\n        let input;\n        let label2;\n        let input2;\n        switch (type) {\n            case 'radio':\n                input = _radioInput(name[0]);\n                input.checked = true;\n                label = _label(name[0], content[0]);\n                input2 = _radioInput(name[1]);\n                label2 = _label(name[1], content[1]);\n                container.appendChild(input);\n                container.appendChild(label);\n                container.appendChild(input2);\n                container.appendChild(label2);\n                break;\n                case 'text':\n                    input = _textInput(name);\n                    label = _label(name, content);\n                    container.appendChild(label);\n                    container.appendChild(input);\n                    if (name === 'item') {\n                        const addItem = _button('add-item', '+');\n                        addItem.classList.add('button');\n                        container.appendChild(addItem);\n                    }\n                    break;\n            case 'date':\n                input = _dateInput(name);\n                input.value = new Date().toISOString().substr(0,10);\n                label = _label(name, content);\n                container.appendChild(label);\n                container.appendChild(input);\n                break;\n            case 'textarea':\n                input = _textArea(name);\n                label = _label(name, content);\n                container.appendChild(label);\n                container.appendChild(input);\n                break;\n            case 'select':\n                input = _select(name, options);\n                label = _label(name, content);\n                container.appendChild(label);\n                container.appendChild(input);\n                break;\n            case 'submit':\n                input = _button(name, content);\n                container.appendChild(input);\n                break;\n        }\n        \n        return container\n    }\n    \n    return { containerConstructor, createOverlay }\n}\n\nconst closeOverlay = () => {\n    const overlay = document.getElementById('form-overlay');\n    container.removeChild(overlay);\n}\n\nconst clearInput = (input) => {\n    input.value = '';\n    input.focus()\n}\n\nconst isDone = (object, target) => {\n    object.classList.toggle('done');\n    target.classList.toggle('completed-ballot')\n}\n\nconst get = _getter();\nconst set = _setter();\nconst showForm = _formFactory();\nconst createTask = _taskFactory();\n\n\n\n\n\n//# sourceURL=webpack://to-do-list/./src/DOMGlobalManipulations.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"projectsArray\": () => (/* binding */ projectsArray),\n/* harmony export */   \"tasksArray\": () => (/* binding */ tasksArray),\n/* harmony export */   \"quickList\": () => (/* binding */ quickList)\n/* harmony export */ });\n/* harmony import */ var _DOMGlobalManipulations__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./DOMGlobalManipulations */ \"./src/DOMGlobalManipulations.js\");\n/* harmony import */ var _projects_factory__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./projects/factory */ \"./src/projects/factory.js\");\n/* harmony import */ var _projects_form__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./projects/form */ \"./src/projects/form.js\");\n/* harmony import */ var _projects_edit__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./projects/edit */ \"./src/projects/edit.js\");\n/* harmony import */ var _projects_print__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./projects/print */ \"./src/projects/print.js\");\n/* harmony import */ var _projects_selection__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./projects/selection */ \"./src/projects/selection.js\");\n/* harmony import */ var _tasks_factory__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./tasks/factory */ \"./src/tasks/factory.js\");\n/* harmony import */ var _tasks_form__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./tasks/form */ \"./src/tasks/form.js\");\n/* harmony import */ var _tasks_edit__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./tasks/edit */ \"./src/tasks/edit.js\");\n/* harmony import */ var _tasks_print__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./tasks/print */ \"./src/tasks/print.js\");\n\n\n\n\n\n\n\n\n\n\n\nlet projectsArray = [];\nlet quickList = [];\nlet tasksArray = [];\n\n// -------------- MODEL -------------- //\nconst getFormInfos = (formType) => {\n    if (formType === 'project') {\n        const name = _DOMGlobalManipulations__WEBPACK_IMPORTED_MODULE_0__.get.name().value;\n        const type = _DOMGlobalManipulations__WEBPACK_IMPORTED_MODULE_0__.get.type().value;\n        const projectId = projectsArray.length;\n        const status = 0;\n        const project = (0,_projects_factory__WEBPACK_IMPORTED_MODULE_1__.Project)(type, name, projectId, status);\n        return project\n    } else if (formType === 'quicklist') {\n        const dueDate = _DOMGlobalManipulations__WEBPACK_IMPORTED_MODULE_0__.get.dueDate().value;\n        const getList = quickList.map(item => item);\n        const taskId = tasksArray.length;\n        const currentProject = _DOMGlobalManipulations__WEBPACK_IMPORTED_MODULE_0__.get.project().value;\n        const project = (0,_tasks_factory__WEBPACK_IMPORTED_MODULE_6__.QuickTask)(dueDate, getList, currentProject, taskId)\n        return project\n    } else if (formType === 'regular') {\n        const name = _DOMGlobalManipulations__WEBPACK_IMPORTED_MODULE_0__.get.name().value;\n        const dueDate = _DOMGlobalManipulations__WEBPACK_IMPORTED_MODULE_0__.get.dueDate().value;\n        const desc = _DOMGlobalManipulations__WEBPACK_IMPORTED_MODULE_0__.get.description().value;\n        const priority = _DOMGlobalManipulations__WEBPACK_IMPORTED_MODULE_0__.get.priority().value;\n        const currentProject = _DOMGlobalManipulations__WEBPACK_IMPORTED_MODULE_0__.get.project().value;\n        const taskId = tasksArray.length;\n        const project = (0,_tasks_factory__WEBPACK_IMPORTED_MODULE_6__.RegularTask)(name, dueDate, desc, currentProject, priority, taskId)\n        return project\n    } else if (formType === 'listItem') {\n        const item = _DOMGlobalManipulations__WEBPACK_IMPORTED_MODULE_0__.get.item().value;\n        return item\n    }\n}\n\nconst checkValidity = (formType, object) => {\n    let validity;\n    if (formType === 'project') {\n        object.name ? validity = true : validity = false;\n        return validity\n    } else if (formType === 'quicklist') {\n        object.list.length > 0 ? validity = true : validity = false;\n        return validity\n    } else if (formType === 'regular') {\n        object.name ? validity = true : validity = false;\n        return validity\n    } else if (formType === 'listItem') {\n        object ? validity = true : validity = false;\n        return validity\n    }\n}\n\nconst updateInfos = (formType, index) => {\n    if (formType === 'project') {\n        const oldName = projectsArray[index].name;\n        projectsArray[index].name = _DOMGlobalManipulations__WEBPACK_IMPORTED_MODULE_0__.get.name().value;\n        const project = (0,_projects_factory__WEBPACK_IMPORTED_MODULE_1__.Project)(projectsArray[index].type, projectsArray[index].name, index, projectsArray[index].status)\n        tasksArray.forEach(task => {\n            if (task.project === oldName) {\n                task.project = project.name;\n            }\n        });\n        // console.log(tasksArray)\n        return { project, oldName }\n    } else if (formType === 'quicklist') {\n        tasksArray[index].dueDate = _DOMGlobalManipulations__WEBPACK_IMPORTED_MODULE_0__.get.dueDate().value;\n        const oldList = tasksArray[index].list;\n        const newList = quickList.map(item => item);\n        const fullList = oldList.concat(newList);\n        tasksArray[index].list = fullList.map(item => item);\n        const project = (0,_tasks_factory__WEBPACK_IMPORTED_MODULE_6__.QuickTask)(tasksArray[index].dueDate, tasksArray[index].list, tasksArray[index].project, index)\n        // console.log(tasksArray)\n        return project\n    } else if (formType === 'regular') {\n        console.log('update array of a normal task')\n        // const name = get.name().value;\n        // const dueDate = get.dueDate().value;\n        // const desc = get.description().value;\n        // const priority = get.priority().value;\n        // const currentProject = get.project().value;\n        // const taskId = tasksArray.length;\n        // const project = RegularTask(name, dueDate, desc, currentProject, priority, taskId)\n        // return project\n    }\n}\n\nconst updateStatus = (index) => {\n    projectsArray[index].status === 0 ? projectsArray[index].status = 1 : projectsArray[index].status = 0;\n}\n\nconst addToArray = (formType, object) => {\n    if (formType === 'project') {\n        projectsArray.push(object);\n        return projectsArray\n    } else if (formType === 'quicklist') {\n        quickList = [];\n        tasksArray.push(object);\n        return tasksArray\n    } else if (formType === 'regular') {\n        tasksArray.push(object);\n        return tasksArray\n    } else if (formType === 'listItem') {\n        quickList.push(object);\n        return quickList\n    }\n}\n\n// -------------- CONTROL VIEW -------------- //\nconst print = (formType, object) => {\n    if (formType === 'project') {\n        (0,_projects_print__WEBPACK_IMPORTED_MODULE_4__.printProject)(object);\n    } else if (formType === 'quicklist') {\n        (0,_tasks_print__WEBPACK_IMPORTED_MODULE_9__.printQuickTask)(object);\n    } else if (formType === 'regular') {\n        (0,_tasks_print__WEBPACK_IMPORTED_MODULE_9__.printRegularTask)(object);\n    } else if (formType === 'listItem') {\n        (0,_tasks_print__WEBPACK_IMPORTED_MODULE_9__.printAddedItem)(object)\n    }\n}\n\nconst unPrint = (formType, object) => {\n    if (formType === 'project') {\n        (0,_projects_print__WEBPACK_IMPORTED_MODULE_4__.unPrintProject)(object);\n    } else if (formType === 'quicklist') {\n        // printQuickTask(object);\n    } else if (formType === 'regular') {\n        // printRegularTask(object);\n    }\n}\n\n// -------------- CONTROLLER -------------- //\nconst clickListener = (e) => {\n    const clickedNode = e.target;\n    const clickedProject = e.target.closest('div.project');\n    const clickedTask = e.target.closest('div.task');\n    const form = e.target.closest('div.form');\n    if ((clickedNode.id === 'add-project' || clickedNode.id === 'add-todo') && !document.getElementById('name')) { console.log('add button'), chooseForm(clickedNode) }\n    else if (clickedProject) { console.log('click on project list'), chooseProjectAction(clickedNode, clickedProject) }\n    else if (form && clickedNode.id === 'add-item') { console.log('add an item to list'), submitNewItem() }\n    else if (form && clickedNode.id === 'submit') { console.log('submit a form'), submitForm(form) }\n    else if (clickedTask) { console.log('clicked on a task'), chooseTaskAction(clickedNode, clickedTask) }\n    else if (clickedNode.id === 'update') { console.log('update task'), updateTask(clickedNode, form)}\n}\n\nconst chooseForm = (target) => {\n    if (target.id === 'add-project') {\n        (0,_projects_form__WEBPACK_IMPORTED_MODULE_2__.projectForm)();\n    } else {\n        const projectSelected = _DOMGlobalManipulations__WEBPACK_IMPORTED_MODULE_0__.get.project().node;\n        if (projectSelected.className.includes('quick')) {\n            (0,_tasks_form__WEBPACK_IMPORTED_MODULE_7__.quickTaskForm)();\n        } else if (projectSelected.className.includes('regular')) {\n            (0,_tasks_form__WEBPACK_IMPORTED_MODULE_7__.regularTaskForm)();\n        } else {\n            console.log('ho no, there isn\\'t any project selected!')\n        }\n    }\n}\n\nconst chooseProjectAction = (target, project) => {\n    if (target.className.includes('ballot')) { \n        updateStatus(project.dataset.index);\n        (0,_DOMGlobalManipulations__WEBPACK_IMPORTED_MODULE_0__.isDone)(project, target);\n    } else if (target.className.includes('project-action') && !document.getElementById('name')) {\n        if (!project.className.includes('selected')) {\n            (0,_projects_selection__WEBPACK_IMPORTED_MODULE_5__.toggleSelectedProject)(project);\n        }\n        (0,_projects_edit__WEBPACK_IMPORTED_MODULE_3__.editProjectForm)(project.childNodes[1]);\n    } else if (target.className.includes('project-action') && project.childNodes[1].tagName !== 'DIV') {\n        dispatchUpdate(project);\n    } else {\n        if (project.className.includes('selected') && project.childNodes[1].tagName === 'DIV') {\n            (0,_projects_edit__WEBPACK_IMPORTED_MODULE_3__.editProjectForm)(project.childNodes[1]);\n        } else if (!project.className.includes('selected') && !document.getElementById('name')) {\n            (0,_projects_selection__WEBPACK_IMPORTED_MODULE_5__.toggleSelectedProject)(project);\n        }\n    }\n}\n\nconst chooseTaskAction = (target, task) => {\n    // console.log(target);\n    if (target.className.includes('ballot') && target.closest('div#list-container')) { \n        (0,_DOMGlobalManipulations__WEBPACK_IMPORTED_MODULE_0__.isDone)(target.parentNode, target);\n        // updateStatus(task.dataset.index);\n    } else if (target.className.includes('edit')) { \n        // console.log('edit');\n        const taskObject = getTaskInfos(task.dataset.index);\n        (0,_tasks_edit__WEBPACK_IMPORTED_MODULE_8__.editTaskForm)(task, taskObject);\n    } else if (target.className.includes('delete')) { \n        console.log('delete')\n    } else if (target.className.includes('status')) { \n        console.log('toggle task status')\n    }\n    \n}\n\nconst submitNewItem = () => {\n    const formType = 'listItem';\n    const item = getFormInfos(formType);\n    const valid = checkValidity(formType, item);\n    if (valid) {\n        const list = addToArray(formType, item); \n        print(formType, item);\n        (0,_DOMGlobalManipulations__WEBPACK_IMPORTED_MODULE_0__.clearInput)(_DOMGlobalManipulations__WEBPACK_IMPORTED_MODULE_0__.get.item().node)\n        // console.log(list)\n    } else {\n        console.log('error: empty item');\n        _DOMGlobalManipulations__WEBPACK_IMPORTED_MODULE_0__.get.item().node.focus();\n    }\n}\n\nconst submitForm = (formNode) => {\n    const formType = formNode.className.replace(/-*form/g, '').trim();\n    const object = getFormInfos(formType);\n    const valid = checkValidity(formType, object);\n    if (valid) {\n        const list = addToArray(formType, object);\n        print(formType, object);\n        (0,_DOMGlobalManipulations__WEBPACK_IMPORTED_MODULE_0__.closeOverlay)();\n        // console.log(list)\n    } else {\n        console.log('invalid');\n        formType === 'quicklist' ? _DOMGlobalManipulations__WEBPACK_IMPORTED_MODULE_0__.get.item().node.focus() : _DOMGlobalManipulations__WEBPACK_IMPORTED_MODULE_0__.get.name().node.focus();\n    }\n}\n\nconst dispatchUpdate = (project) => {\n    const formType = 'project';\n    const index = project.dataset.index;\n    const update = updateInfos(formType, index);\n    const object = update.project;\n    const oldName = update.oldName;\n    const valid = checkValidity(formType, object);\n    if (valid) {\n        unPrint(formType, project);\n        (0,_projects_print__WEBPACK_IMPORTED_MODULE_4__.printNewProjectName)(object, project);\n        (0,_projects_print__WEBPACK_IMPORTED_MODULE_4__.editTasksProject)(object, oldName);\n    } else {\n        console.log('invalid');\n        formType === 'quicklist' ? _DOMGlobalManipulations__WEBPACK_IMPORTED_MODULE_0__.get.item().node.focus() : _DOMGlobalManipulations__WEBPACK_IMPORTED_MODULE_0__.get.name().node.focus();\n    }\n}\n\nconst updateTask = (target, formNode) => {\n    const formType = formNode.className.replace(/-*form/g, '').trim();\n    const index = target.dataset.taskIndex;\n    const object = updateInfos(formType, index);\n    const valid = checkValidity(formType, object);\n    if (valid) {\n        console.log(object);\n        (0,_DOMGlobalManipulations__WEBPACK_IMPORTED_MODULE_0__.closeOverlay)();\n    } else {\n        console.log('invalid');\n        formType === 'quicklist' ? _DOMGlobalManipulations__WEBPACK_IMPORTED_MODULE_0__.get.item().node.focus() : _DOMGlobalManipulations__WEBPACK_IMPORTED_MODULE_0__.get.name().node.focus();\n    }\n}\n\nconst getTaskInfos = (index) => {\n    return tasksArray[index]\n}\n\n\n// ----------------------------------CALLS\n// add some prototype project and tasks to start the page\nconst initiatePage = (() => {\n    const protoQuick = (0,_projects_factory__WEBPACK_IMPORTED_MODULE_1__.Project)('quick', 'prototype-shopping-list', 0, 0);\n    const protoReg = (0,_projects_factory__WEBPACK_IMPORTED_MODULE_1__.Project)('regular', 'prototype-classic-project', 1, 0);\n    const testQuickTask = (0,_tasks_factory__WEBPACK_IMPORTED_MODULE_6__.QuickTask)('2021-03-02', ['aaa', 'bbb'], 'prototype-shopping-list', 0);\n    const testRegTask = (0,_tasks_factory__WEBPACK_IMPORTED_MODULE_6__.RegularTask)('task prototype', '2021-03-09', 'description: lorem ipsum dolor sic amat.', 'prototype-classic-project', 'normal', 1);\n    addToArray('project', protoQuick);\n    addToArray('project', protoReg);\n    addToArray('quicklist', testQuickTask);\n    addToArray('regular', testRegTask);\n    (0,_tasks_print__WEBPACK_IMPORTED_MODULE_9__.printQuickTask)(testQuickTask);\n    (0,_tasks_print__WEBPACK_IMPORTED_MODULE_9__.printRegularTask)(testRegTask);\n    (0,_projects_print__WEBPACK_IMPORTED_MODULE_4__.printProject)(protoReg);\n    (0,_projects_print__WEBPACK_IMPORTED_MODULE_4__.printProject)(protoQuick);\n})();\ndocument.addEventListener('click', clickListener)\n\n\n\n//# sourceURL=webpack://to-do-list/./src/index.js?");

/***/ }),

/***/ "./src/projects/edit.js":
/*!******************************!*\
  !*** ./src/projects/edit.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"editProjectForm\": () => (/* binding */ editProjectForm)\n/* harmony export */ });\nconst editProjectForm = (node) => {\n    const input = document.createElement('input');\n    input.id = 'name';\n    input.value = node.textContent;\n    node.parentNode.replaceChild(input, node);\n    input.focus();\n}\n\n\n\n//# sourceURL=webpack://to-do-list/./src/projects/edit.js?");

/***/ }),

/***/ "./src/projects/factory.js":
/*!*********************************!*\
  !*** ./src/projects/factory.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Project\": () => (/* binding */ Project)\n/* harmony export */ });\n//factory\nconst Project = (type, name, id, status) => {\n    return { type , name , id, status}\n}\n\n\n\n//# sourceURL=webpack://to-do-list/./src/projects/factory.js?");

/***/ }),

/***/ "./src/projects/form.js":
/*!******************************!*\
  !*** ./src/projects/form.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"projectForm\": () => (/* binding */ projectForm)\n/* harmony export */ });\n/* harmony import */ var _DOMGlobalManipulations__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../DOMGlobalManipulations */ \"./src/DOMGlobalManipulations.js\");\n\n\nconst projectForm = () => {\n    const radioContainer = _DOMGlobalManipulations__WEBPACK_IMPORTED_MODULE_0__.showForm.containerConstructor('radio', ['regular', 'quick'], ['Regular task', 'Quick list task']);\n    const textContainer = _DOMGlobalManipulations__WEBPACK_IMPORTED_MODULE_0__.showForm.containerConstructor('text', 'name', 'Project name');\n    const submitContainer = _DOMGlobalManipulations__WEBPACK_IMPORTED_MODULE_0__.showForm.containerConstructor('submit', 'submit', 'New Project');\n    \n    const overlay = _DOMGlobalManipulations__WEBPACK_IMPORTED_MODULE_0__.showForm.createOverlay('project-form', [radioContainer, textContainer, submitContainer]);\n    _DOMGlobalManipulations__WEBPACK_IMPORTED_MODULE_0__.container.appendChild(overlay);\n    \n    _DOMGlobalManipulations__WEBPACK_IMPORTED_MODULE_0__.get.name().node.focus()\n}\n\n\n\n//# sourceURL=webpack://to-do-list/./src/projects/form.js?");

/***/ }),

/***/ "./src/projects/print.js":
/*!*******************************!*\
  !*** ./src/projects/print.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"printProject\": () => (/* binding */ printProject),\n/* harmony export */   \"unPrintProject\": () => (/* binding */ unPrintProject),\n/* harmony export */   \"printNewProjectName\": () => (/* binding */ printNewProjectName),\n/* harmony export */   \"editTasksProject\": () => (/* binding */ editTasksProject)\n/* harmony export */ });\n/* harmony import */ var _DOMGlobalManipulations__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../DOMGlobalManipulations */ \"./src/DOMGlobalManipulations.js\");\n/* harmony import */ var _selection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./selection */ \"./src/projects/selection.js\");\n\n\n\n\nconst printProject = (project) => {\n    const card = document.createElement('div');\n    card.classList.add('project');\n    card.classList.add(project.type);\n    card.setAttribute('data-index', project.id);\n    const ballot = document.createElement('div');\n    ballot.classList.add('ballot');\n    card.appendChild(ballot);\n    const content = document.createElement('div');\n    content.textContent = `${project.name}`;\n    card.appendChild(content);\n    const action = document.createElement('button');\n    action.classList.add('project-action');\n    action.textContent = 'ğŸ–‰';\n    card.appendChild(action);\n    project.type === 'quick' ? _DOMGlobalManipulations__WEBPACK_IMPORTED_MODULE_0__.quickListProjects.appendChild(card) : _DOMGlobalManipulations__WEBPACK_IMPORTED_MODULE_0__.postitProjects.appendChild(card);\n    (0,_selection__WEBPACK_IMPORTED_MODULE_1__.toggleSelectedProject)(card);\n};\n\nconst printNewProjectName = (project, node) => {\n    const card = node;\n    const content = document.createElement('div');\n    content.textContent = `${project.name}`;\n    card.appendChild(content);\n    const action = document.createElement('button');\n    action.classList.add('project-action');\n    action.textContent = 'ğŸ–‰';\n    card.appendChild(action);\n};\n\nconst editTasksProject = (object, oldName) => {\n    const allTasks = Array.from(_DOMGlobalManipulations__WEBPACK_IMPORTED_MODULE_0__.get.allTasks());\n    allTasks.forEach(taskNode => {\n        if (taskNode.dataset.project === oldName) {\n            taskNode.dataset.project = object.name;\n        }\n    });\n}\n\nconst unPrintProject = (object) => {\n    let buttons = Array.from(document.getElementsByClassName('project-action'));\n    const button = () => {\n        let aButton\n        buttons.forEach(button => {\n            if (button.closest('div.project') === object) {\n                aButton = button;\n                return aButton\n            }\n            return aButton\n        });\n        return aButton\n    }\n    const editButton = button()\n    const input = _DOMGlobalManipulations__WEBPACK_IMPORTED_MODULE_0__.get.name().node;\n    object.removeChild(editButton);\n    object.removeChild(input);\n}\n\n\n\n//# sourceURL=webpack://to-do-list/./src/projects/print.js?");

/***/ }),

/***/ "./src/projects/selection.js":
/*!***********************************!*\
  !*** ./src/projects/selection.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"toggleSelectedProject\": () => (/* binding */ toggleSelectedProject)\n/* harmony export */ });\n/* harmony import */ var _DOMGlobalManipulations__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../DOMGlobalManipulations */ \"./src/DOMGlobalManipulations.js\");\n/* harmony import */ var _tasks_filter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tasks/filter */ \"./src/tasks/filter.js\");\n\n\n\n\nconst toggleSelectedProject = (newSelectedProject) => {\n    _DOMGlobalManipulations__WEBPACK_IMPORTED_MODULE_0__.quickListProjects.childNodes.forEach(child => {\n        if (child.className.includes('selected')) {\n            child.classList.remove('selected')\n        }\n    });\n    _DOMGlobalManipulations__WEBPACK_IMPORTED_MODULE_0__.postitProjects.childNodes.forEach(child => {\n        if (child.className.includes('selected')) {\n            child.classList.remove('selected')\n        }\n    });\n    newSelectedProject.classList.add('selected');\n    (0,_tasks_filter__WEBPACK_IMPORTED_MODULE_1__.filterTasks)(newSelectedProject.childNodes[1].textContent)\n}\n\n\n\n//# sourceURL=webpack://to-do-list/./src/projects/selection.js?");

/***/ }),

/***/ "./src/tasks/edit.js":
/*!***************************!*\
  !*** ./src/tasks/edit.js ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"editTaskForm\": () => (/* binding */ editTaskForm)\n/* harmony export */ });\n/* harmony import */ var _form__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./form */ \"./src/tasks/form.js\");\n/* harmony import */ var _DOMGlobalManipulations__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../DOMGlobalManipulations */ \"./src/DOMGlobalManipulations.js\");\n/* harmony import */ var _print__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./print */ \"./src/tasks/print.js\");\n/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../index */ \"./src/index.js\");\n\n\n\n\n\nconst editTaskForm = (node, task) => {\n    if (node.className.includes('post-it')) {\n        (0,_form__WEBPACK_IMPORTED_MODULE_0__.regularTaskForm)();\n        prefillRegularForm(task);\n        // console.log(task)\n    } else {\n        (0,_form__WEBPACK_IMPORTED_MODULE_0__.quickTaskForm)();\n        prefillListForm(task);\n        // console.log(task)\n    }    \n}\n\nconst prefillRegularForm = (task) => {\n    _DOMGlobalManipulations__WEBPACK_IMPORTED_MODULE_1__.set.name(task.name);\n    _DOMGlobalManipulations__WEBPACK_IMPORTED_MODULE_1__.set.description(task.description);\n    _DOMGlobalManipulations__WEBPACK_IMPORTED_MODULE_1__.set.dueDate(task.dueDate);\n    _DOMGlobalManipulations__WEBPACK_IMPORTED_MODULE_1__.set.priority(task.priority);\n    _DOMGlobalManipulations__WEBPACK_IMPORTED_MODULE_1__.set.submitButton('Update task', 'update', task.id)\n}\n\nconst prefillListForm = (task) => {\n    _DOMGlobalManipulations__WEBPACK_IMPORTED_MODULE_1__.set.dueDate(task.dueDate);\n    task.list.forEach(item => {\n        (0,_print__WEBPACK_IMPORTED_MODULE_2__.printAddedItem)(item);\n    });\n    _DOMGlobalManipulations__WEBPACK_IMPORTED_MODULE_1__.set.submitButton('Update list', 'update', task.id)\n}\n\n\n\n\n\n\n//# sourceURL=webpack://to-do-list/./src/tasks/edit.js?");

/***/ }),

/***/ "./src/tasks/factory.js":
/*!******************************!*\
  !*** ./src/tasks/factory.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"QuickTask\": () => (/* binding */ QuickTask),\n/* harmony export */   \"RegularTask\": () => (/* binding */ RegularTask)\n/* harmony export */ });\nconst QuickTask = (dueDate, list, project, id) => {\n    return { dueDate, list, project, id }\n}\n\nconst RegularTask = (name, dueDate, description, project, priority, id) => {\n    return { name, dueDate, description, project, priority, id }\n}\n\n\n\n//# sourceURL=webpack://to-do-list/./src/tasks/factory.js?");

/***/ }),

/***/ "./src/tasks/filter.js":
/*!*****************************!*\
  !*** ./src/tasks/filter.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"filterTasks\": () => (/* binding */ filterTasks)\n/* harmony export */ });\n/* harmony import */ var _DOMGlobalManipulations__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../DOMGlobalManipulations */ \"./src/DOMGlobalManipulations.js\");\n\n\nconst filterTasks = (selectedProject) => {\n    _DOMGlobalManipulations__WEBPACK_IMPORTED_MODULE_0__.taskContainer.childNodes.forEach(task => {\n        if(task.dataset.project === selectedProject){\n            task.classList.remove('hidden')\n        } else {\n            task.classList.add('hidden')\n        }\n    });\n}\n\n\n\n//# sourceURL=webpack://to-do-list/./src/tasks/filter.js?");

/***/ }),

/***/ "./src/tasks/form.js":
/*!***************************!*\
  !*** ./src/tasks/form.js ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"quickTaskForm\": () => (/* binding */ quickTaskForm),\n/* harmony export */   \"regularTaskForm\": () => (/* binding */ regularTaskForm)\n/* harmony export */ });\n/* harmony import */ var _DOMGlobalManipulations__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../DOMGlobalManipulations */ \"./src/DOMGlobalManipulations.js\");\n\n\nconst quickTaskForm = () => {\n    const dueDateContainer = _DOMGlobalManipulations__WEBPACK_IMPORTED_MODULE_0__.showForm.containerConstructor('date', 'dueDate', 'Due date');\n    const textContainer = _DOMGlobalManipulations__WEBPACK_IMPORTED_MODULE_0__.showForm.containerConstructor('text', 'item', 'List item');\n    const ul = document.createElement('ul');\n    ul.id = 'quick-task-list';\n    const submitContainer = _DOMGlobalManipulations__WEBPACK_IMPORTED_MODULE_0__.showForm.containerConstructor('submit', 'submit', 'Submit list');\n    \n    const overlay = _DOMGlobalManipulations__WEBPACK_IMPORTED_MODULE_0__.showForm.createOverlay('quicklist-form', [dueDateContainer, textContainer, ul, submitContainer]);\n    _DOMGlobalManipulations__WEBPACK_IMPORTED_MODULE_0__.container.appendChild(overlay);\n\n    _DOMGlobalManipulations__WEBPACK_IMPORTED_MODULE_0__.get.item().node.focus();\n}\n\nconst regularTaskForm = () => {\n    const textContainer = _DOMGlobalManipulations__WEBPACK_IMPORTED_MODULE_0__.showForm.containerConstructor('text', 'name', 'Name');\n    const textareaContainer = _DOMGlobalManipulations__WEBPACK_IMPORTED_MODULE_0__.showForm.containerConstructor('textarea', 'description', 'Description');\n    const dueDateContainer = _DOMGlobalManipulations__WEBPACK_IMPORTED_MODULE_0__.showForm.containerConstructor('date', 'dueDate', 'Due date');\n    const priorityContainer = _DOMGlobalManipulations__WEBPACK_IMPORTED_MODULE_0__.showForm.containerConstructor('select', 'priority', 'Priority', ['low', 'normal', 'high']);\n    const submitContainer = _DOMGlobalManipulations__WEBPACK_IMPORTED_MODULE_0__.showForm.containerConstructor('submit', 'submit', 'Submit task');\n    \n    const overlay = _DOMGlobalManipulations__WEBPACK_IMPORTED_MODULE_0__.showForm.createOverlay('regular-form', [textContainer, textareaContainer, dueDateContainer, priorityContainer, submitContainer]);\n    _DOMGlobalManipulations__WEBPACK_IMPORTED_MODULE_0__.container.appendChild(overlay);\n    \n    _DOMGlobalManipulations__WEBPACK_IMPORTED_MODULE_0__.get.name().node.focus()\n}\n\n\n\n//# sourceURL=webpack://to-do-list/./src/tasks/form.js?");

/***/ }),

/***/ "./src/tasks/print.js":
/*!****************************!*\
  !*** ./src/tasks/print.js ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"printAddedItem\": () => (/* binding */ printAddedItem),\n/* harmony export */   \"printQuickTask\": () => (/* binding */ printQuickTask),\n/* harmony export */   \"printRegularTask\": () => (/* binding */ printRegularTask)\n/* harmony export */ });\n/* harmony import */ var _DOMGlobalManipulations__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../DOMGlobalManipulations */ \"./src/DOMGlobalManipulations.js\");\n\n\nconst printAddedItem = (lastItem) => {\n    if (lastItem) {\n        const ul = document.getElementById('quick-task-list');\n        const li = document.createElement('li');\n        li.textContent = lastItem;\n        ul.appendChild(li);\n    }\n}\n\nconst printQuickTask = (task) => {\n    const postit = _DOMGlobalManipulations__WEBPACK_IMPORTED_MODULE_0__.createTask.taskConstructor('quick', task)\n    _DOMGlobalManipulations__WEBPACK_IMPORTED_MODULE_0__.taskContainer.appendChild(postit)\n}\n\nconst printRegularTask = (task) => {\n    const postit = _DOMGlobalManipulations__WEBPACK_IMPORTED_MODULE_0__.createTask.taskConstructor('regular', task)\n    _DOMGlobalManipulations__WEBPACK_IMPORTED_MODULE_0__.taskContainer.appendChild(postit);\n}\n\n\n\n//# sourceURL=webpack://to-do-list/./src/tasks/print.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		if(__webpack_module_cache__[moduleId]) {
/******/ 			return __webpack_module_cache__[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module is referenced by other modules so it can't be inlined
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.js");
/******/ 	
/******/ })()
;